// <auto-generated />
using System;
using CargoGateway.API.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CargoGateway.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250716144218_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseSerialColumns(modelBuilder);

            modelBuilder.Entity("Cargo.Libraries.Logistics.Models.Entities.LegEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("ArrivalDate")
                        .HasColumnType("date");

                    b.Property<string>("ArrivalLocation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeOnly>("ArrivalTime")
                        .HasColumnType("time");

                    b.Property<DateOnly>("DepartureDate")
                        .HasColumnType("date");

                    b.Property<string>("DepartureLocation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeOnly>("DepartureTime")
                        .HasColumnType("time");

                    b.Property<Guid>("ShipmentId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ShipmentId");

                    b.ToTable("LegEntities");
                });

            modelBuilder.Entity("Cargo.Libraries.Logistics.Models.Entities.SearchEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("From")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SearchEntities");
                });

            modelBuilder.Entity("Cargo.Libraries.Logistics.Models.Entities.ShipmentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CargoType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CarrierCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("SearchId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SearchId");

                    b.ToTable("ShipmentEntities");
                });

            modelBuilder.Entity("Cargo.Libraries.Logistics.Models.Entities.LegEntity", b =>
                {
                    b.HasOne("Cargo.Libraries.Logistics.Models.Entities.ShipmentEntity", "Shipment")
                        .WithMany("Legs")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("Cargo.Libraries.Logistics.Models.Entities.ShipmentEntity", b =>
                {
                    b.HasOne("Cargo.Libraries.Logistics.Models.Entities.SearchEntity", "Search")
                        .WithMany("Shipments")
                        .HasForeignKey("SearchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Search");
                });

            modelBuilder.Entity("Cargo.Libraries.Logistics.Models.Entities.SearchEntity", b =>
                {
                    b.Navigation("Shipments");
                });

            modelBuilder.Entity("Cargo.Libraries.Logistics.Models.Entities.ShipmentEntity", b =>
                {
                    b.Navigation("Legs");
                });
#pragma warning restore 612, 618
        }
    }
}
